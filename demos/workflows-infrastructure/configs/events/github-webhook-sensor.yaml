apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-webhook-sensor
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: github-cluster-upgrade-issue
      eventSourceName: github-webhook-source
      eventName: github
      filters:
        data:
        - path: 'body.action'
          type: string
          value:
            - "labeled"
        - path: 'body.label.name'
          type: string
          value:
            - "approved"
        - path: 'body.issue.state'
          type: string
          value:
            - "open"
        - path: 'body.issue.labels.#(name=="approved").name'
          type: string
          value:
            - "approved"
        - path: 'body.issue.labels.#(name=="upgrade").name'
          type: string
          value:
            - "upgrade"
        - path: 'body.issue.labels.#(name%"cluster*").name'
          type: string
          value:
            - "cluster/.*"
        - path: 'body.issue.labels.#(name%"project*").name'
          type: string
          value:
            - "project/.*"
        - path: 'body.issue.labels.#(name%"zone*").name'
          type: string
          value:
            - "zone/.*"
  triggers:
    - template:
        name: upgrade-cluster-trigger
        argoWorkflow:
          operation: submit
          parameters:
          - src:
              dependencyName: github-cluster-upgrade-issue
              contextTemplate: 'cluster-upgrader-{{ .Input.id | trunc 8}}'
            dest: metadata.name
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.repository.owner.login
            dest: spec.arguments.parameters.0.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.repository.name
            dest: spec.arguments.parameters.1.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.issue.number
            dest: spec.arguments.parameters.2.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.issue.title
            dest: spec.arguments.parameters.3.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.issue.labels.#(name%"cluster*").name
            dest: spec.arguments.parameters.4.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.issue.labels.#(name%"project*").name
            dest: spec.arguments.parameters.5.value
          - src:
              dependencyName: github-cluster-upgrade-issue
              dataKey: body.issue.labels.#(name%"zone*").name
            dest: spec.arguments.parameters.6.value

          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                name: PLACEHOLDER
                namespace: cluster-upgrader
              spec:
                entrypoint: main
                volumes:
                - name: gcloud-service-account
                  secret:
                    secretName: cluster-upgrade-secret
                ttlStrategy:
                  secondsAfterCompletion: 7200
                arguments:
                  parameters:
                  - name: repo-owner
                    value: PLACEHOLDER
                  - name: repo
                    value: PLACEHOLDER
                  - name: issue
                    value: PLACEHOLDER
                  - name: version
                    value: PLACEHOLDER
                  - name: cluster
                    value: PLACEHOLDER
                  - name: project
                    value: PLACEHOLDER
                  - name: zone
                    value: PLACEHOLDER
                templates:
                - name: main
                  dag:
                    tasks:
                    - name: pre-checks
                      template: pre-checks
                      arguments:
                        parameters:
                        - name: cluster
                          value: "{{workflow.parameters.cluster}}"
                        - name: project
                          value: "{{workflow.parameters.project}}"
                        - name: zone
                          value: "{{workflow.parameters.zone}}"
                    - name: pre-checks-failed
                      depends: "pre-checks.Failed"
                      template: add-comment
                      arguments:
                        parameters:
                        - name: repo-owner
                          value: "{{workflow.parameters.repo-owner}}"
                        - name: repo
                          value: "{{workflow.parameters.repo}}"
                        - name: issue
                          value: "{{workflow.parameters.issue}}"
                        - name: comment
                          value: ":x: Pre-checks failed. The workflow was unable to get information about the selected cluster. The upgrade has been aborted."
                    - name: pre-checks-succeeded
                      depends: "pre-checks.Succeeded"
                      template: add-comment
                      arguments:
                        parameters:
                        - name: repo-owner
                          value: "{{workflow.parameters.repo-owner}}"
                        - name: repo
                          value: "{{workflow.parameters.repo}}"
                        - name: issue
                          value: "{{workflow.parameters.issue}}"
                        - name: comment
                          value: ":rocket: Pre-checks succeeded. The workflow was able to get the cluster. Proceeding with the upgrade."
                    - name: upgrade-cluster
                      depends: "pre-checks-succeeded.Succeeded"
                      template: upgrade-cluster
                      arguments:
                        parameters:
                        - name: version
                          value: "{{workflow.parameters.version}}"
                        - name: cluster
                          value: "{{workflow.parameters.cluster}}"
                        - name: project
                          value: "{{workflow.parameters.project}}"
                        - name: zone
                          value: "{{workflow.parameters.zone}}"
                    - name: validate-upgrade
                      depends: "upgrade-cluster.Succeeded"
                      template: validate-upgrade
                      arguments:
                        parameters:
                        - name: version
                          value: "{{workflow.parameters.version}}"
                        - name: cluster
                          value: "{{workflow.parameters.cluster}}"
                        - name: project
                          value: "{{workflow.parameters.project}}"
                        - name: zone
                          value: "{{workflow.parameters.zone}}"
                    - name: validate-upgrade-failed
                      depends: "validate-upgrade.Failed"
                      template: add-comment
                      arguments:
                        parameters:
                        - name: repo-owner
                          value: "{{workflow.parameters.repo-owner}}"
                        - name: repo
                          value: "{{workflow.parameters.repo}}"
                        - name: issue
                          value: "{{workflow.parameters.issue}}"
                        - name: comment
                          value: REPLACE ME VALIDATE UPGRADE FAILED
                    - name: validate-upgrade-succeeded
                      depends: "validate-upgrade.Succeeded"
                      template: add-comment
                      arguments:
                        parameters:
                        - name: repo-owner
                          value: "{{workflow.parameters.repo-owner}}"
                        - name: repo
                          value: "{{workflow.parameters.repo}}"
                        - name: issue
                          value: "{{workflow.parameters.issue}}"
                        - name: comment
                          value: "REPLACE ME VALIDATE UPGRADE SUCCEEDED"
                    - name: close-issue
                      depends: "validate-upgrade-succeeded.Succeeded"
                      template: close-issue
                      arguments:
                        parameters:
                        - name: repo-owner
                          value: "{{workflow.parameters.repo-owner}}"
                        - name: repo
                          value: "{{workflow.parameters.repo}}"
                        - name: issue
                          value: "{{workflow.parameters.issue}}"

                - name: add-comment
                  inputs:
                    parameters:
                    - name: repo-owner
                    - name: repo
                    - name: issue
                    - name: comment
                  http:
                    url: "https://api.github.com/repos/{{inputs.parameters.repo-owner}}/{{inputs.parameters.repo}}/issues/{{inputs.parameters.issue}}/comments"
                    method: "POST"
                    headers:
                    - name: Content-Type
                      value: application/json
                    - name: Authorization
                      valueFrom:
                        secretKeyRef:
                          key: DEMO_GH_PAT
                          name: cluster-upgrade-secret
                    successCondition: "response.statusCode == 201"
                    body: '{"body":"{{inputs.parameters.comment}}"}'

                - name: pre-checks
                  inputs:
                    parameters:
                    - name: cluster
                    - name: project
                    - name: zone
                  container:
                    image: google/cloud-sdk:458.0.1
                    volumeMounts:
                    - name: gcloud-service-account
                      mountPath: "/certs"
                    command:
                    - "/bin/bash"
                    - "-c"
                    - |
                      set -xe
                      export CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/certs/svc_account.json
                      export CLUSTER_NAME=$(echo "{{inputs.parameters.cluster}}" | cut -c 9-)
                      export CLUSTER_PROJECT=$(echo "{{inputs.parameters.project}}" | cut -c 9-)
                      export CLUSTER_ZONE=$(echo "{{inputs.parameters.zone}}" | cut -c 6-)

                      gcloud container clusters describe ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT}

                - name: upgrade-cluster
                  inputs:
                    parameters:
                    - name: version
                    - name: cluster
                    - name: project
                    - name: zone
                  container:
                    image: google/cloud-sdk:458.0.1
                    volumeMounts:
                    - name: gcloud-service-account
                      mountPath: "/certs"
                    command:
                    - "/bin/bash"
                    - "-c"
                    - |
                      set -xe
                      export CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/certs/svc_account.json
                      export CLUSTER_VERSION=$(echo "{{inputs.parameters.version}}")
                      export CLUSTER_NAME=$(echo "{{inputs.parameters.cluster}}" | cut -c 9-)
                      export CLUSTER_PROJECT=$(echo "{{inputs.parameters.project}}" | cut -c 9-)
                      export CLUSTER_ZONE=$(echo "{{inputs.parameters.zone}}" | cut -c 6-)

                      wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O ./yq && chmod +x ./yq

                      # Upgrade master
                      gcloud container clusters upgrade ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT} --cluster-version="${CLUSTER_VERSION}" --master --quiet

                      # Upgrade nodepools
                      readarray nodePools < <( gcloud container clusters describe ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT} | ./yq e -o=j -I=0 '.nodePools[]' )
                      for nodePool in "${nodePools[@]}"; do
                          nodePoolName=$(echo "$nodePool" | ./yq e '.name' -)
                          gcloud container clusters upgrade ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT} --cluster-version="${CLUSTER_VERSION}" --node-pool="${nodePoolName}" --quiet
                      done

                - name: validate-upgrade
                  inputs:
                    parameters:
                    - name: version
                    - name: cluster
                    - name: project
                    - name: zone
                  container:
                    image: google/cloud-sdk:458.0.1
                    volumeMounts:
                    - name: gcloud-service-account
                      mountPath: "/certs"
                    command:
                    - "/bin/bash"
                    - "-c"
                    - |
                      set -xe
                      export CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=/certs/svc_account.json
                      export CLUSTER_VERSION=$(echo "{{inputs.parameters.version}}")
                      export CLUSTER_NAME=$(echo "{{inputs.parameters.cluster}}" | cut -c 9-)
                      export CLUSTER_PROJECT=$(echo "{{inputs.parameters.project}}" | cut -c 9-)
                      export CLUSTER_ZONE=$(echo "{{inputs.parameters.zone}}" | cut -c 6-)

                      gcloud container clusters describe ${CLUSTER_NAME} --zone ${CLUSTER_ZONE} --project ${CLUSTER_PROJECT}

                - name: close-issue
                  inputs:
                    parameters:
                    - name: repo-owner
                    - name: repo
                    - name: issue
                  http:
                    url: "https://api.github.com/repos/{{inputs.parameters.repo-owner}}/{{inputs.parameters.repo}}/issues/{{inputs.parameters.issue}}"
                    method: "PATCH"
                    headers:
                    - name: Content-Type
                      value: application/json
                    - name: Authorization
                      valueFrom:
                        secretKeyRef:
                          key: DEMO_GH_PAT
                          name: cluster-upgrade-secret
                    successCondition: "response.statusCode == 200"
                    body: '{"state":"closed"}'